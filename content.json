{"meta":{"title":"易网盟","subtitle":"专注网站建设优化","description":"Hexo/Hugo... + GitHub免费仓库托管方案，微软不倒，羊毛到老！","author":"易网盟","url":"https://qianwen99.github.io","root":"/"},"pages":[{"title":"关于本站","date":"2022-12-01T11:09:40.269Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"about/index.html","permalink":"https://qianwen99.github.io/about/index.html","excerpt":"","text":"这是个互联网爱好者个人小站，完全出于兴趣爱好自封互联网研究院院长，乐于分享计算机相关使用方法，推广优质实用软件。所有技术类文章除特别说明外均为本站原创，所提供的软件为院长原创或由网络整理而来。 本院始终坚信： 分享是种美德，好人一生平安！ 本着尊重国家法律的精神，根据中华人民共和国国务院令第632号规定： 第十七条 为了学习和研究软件内含的设计思想和原理，通过安装、显示、传输或者存储软件等方式使用软件的，可以不经软件著作权人许可，不向其支付报酬。 本站所有资源均为学习，交流使用，不得用于任何商业用途。使用的软件请下载后24小时内自行删除，若由于研究学习本站提供文件或链接下载的软件而带来损失，本站不负任何责任。 如果您发现本站侵害了您的版权，请联系院长并出示版权证明，院长将第一时间进行相关处理。 如果您也一样热爱互联网，喜欢捣鼓软件，欢迎评论留言或与院长联系。 QQ群：键盘侠 260489333，点此加群"},{"title":"archives","date":"2020-07-18T05:10:34.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"archives/index.html","permalink":"https://qianwen99.github.io/archives/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-08-30T03:41:17.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"categories/index.html","permalink":"https://qianwen99.github.io/categories/index.html","excerpt":"","text":""},{"title":"contact","date":"2020-08-30T14:45:09.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"contact/index.html","permalink":"https://qianwen99.github.io/contact/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-08-30T14:40:51.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"friends/index.html","permalink":"https://qianwen99.github.io/friends/index.html","excerpt":"","text":""},{"title":"","date":"2016-12-31T10:09:56.000Z","updated":"2016-12-31T10:09:56.000Z","comments":false,"path":"history/index.html","permalink":"https://qianwen99.github.io/history/index.html","excerpt":"","text":""},{"title":"友链","date":"2022-05-28T03:09:14.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"link/index.html","permalink":"https://qianwen99.github.io/link/index.html","excerpt":"","text":""},{"title":"","date":"2017-02-24T09:37:05.000Z","updated":"2017-02-24T09:37:05.000Z","comments":true,"path":"tags/index.html","permalink":"https://qianwen99.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2099-09-09T01:09:09.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"hello-world.html","link":"","permalink":"https://qianwen99.github.io/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[{"name":"Example","slug":"Example","permalink":"https://qianwen99.github.io/tags/Example/"}]},{"title":"从零开始建个小站 - 常见问题","slug":"guide-how-to-build-site-9","date":"2022-11-11T03:11:11.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-9.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-9.html","excerpt":"","text":"文档看不懂&#x2F;不想看&#x2F;太麻烦&#x2F;我不会……懒那就没辙了，快发动你的钞能力！ GitHub咋打不开？各地网络管制松紧度不一样，无法访问就上梯子吧，配置方法请见：从零开始建个小站 - 6. 其他知识 中相关内容。 换电脑怎么办本站提供的仓库方案，只要你仓库不删就不会丢，新电脑上照本站使用教程克隆源码仓库安装一遍本地预览环境就可以了，如果你会遵循Git提交规则，不管到哪有多少个设备都可以一起用，也可以随时恢复到任意一次提交的版本。 怎么更换&#x2F;安装&#x2F;配置主题？请打开网站配置文件 _config.yml 仔细看下，有更换主题的配置注释。至于主题安装及功能配置，每个主题大同小异，但言而总之，请找到主题的说明文档，根据主题文档去操作。 去哪找自己喜欢的主题？你喜欢啥样的咱也不知道，请自行到 Hexo官方主题展示页 去挑选，萝卜白菜都是你自己的喜好。 关于页面怎么来的？是自己建的，内容是自己写的，有些主题文档中也会提及，或者请参考：关于菜单怎么来 怎么我改了没效果？任何增删改都需要提交同步到上端仓库，请确保你所做的更改已经提交同步完成，然后等几分钟服务器刷新缓存，对照内容维护可参考：从零开始建个小站 - 4. 练手内容维护 中相关内容。 改了几行代码，就异常了改了啥自己清楚，Git历史记录中也能对比前后差异，所以改完建议本地预览一下结果，启动 hexo s 预览的时候就会显示日志，循着异常日志去看下具体什么问题，然后对应修正即可。 或者把错误提示关键词丢给本站战略合作伙伴 Google和百度，让我们的战略伙伴助你一臂之力。 MarkDown语法我不会😢MarkDown语法已经很简单易懂了，这里有一个章节列了几个常用到的基本语法： 从零开始建个小站 - 4. 练手内容维护 ，更多可以阅读后文更专业的MarkDown语法教程。 对照教程敲一两遍就会了，用啥查啥临时抱佛脚都能应付得了。实在不会可以借助编辑器界面化操作，或者你就当Word或记事本写内容都行，无非就是少了点格式样式。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 1. 搭个本地预览环境","slug":"guide-how-to-build-site-3","date":"2022-06-06T12:20:20.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-3.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-3.html","excerpt":"如果你选择的是自备服务器的付费方案，那么直接在服务器上安装环境部署网站程序即可，本文不做演示，下文只针对免费方案进行详细说明。 其实官方默认自带的 hello world 示例就告知了基本的用法，要把细枝末节展开来还能再写一本书，本教程也只是针对本站部署的方案，给新手演示一个大概的操作流程，更多细节或者高深玩法请在熟悉后自行发掘。","text":"如果你选择的是自备服务器的付费方案，那么直接在服务器上安装环境部署网站程序即可，本文不做演示，下文只针对免费方案进行详细说明。 其实官方默认自带的 hello world 示例就告知了基本的用法，要把细枝末节展开来还能再写一本书，本教程也只是针对本站部署的方案，给新手演示一个大概的操作流程，更多细节或者高深玩法请在熟悉后自行发掘。 虽然也能在线增删改文件，但还是建议拉取仓库到本地电脑进行操作。在本地电脑操作，就有必要搭个本地预览环境。 1.1 安装 Git 客户端仓库文件管理借助大名鼎鼎的代码项目管理工具，到 Git-SCM官网 下载安装包或者软件源默认安装完成即可。 Windows 系统安装完成后，会在右键菜单添加 Git Bash Here 入口，方便后续使用。 如果以前未使用过 Git，一般都需要设置用户名和邮箱，随便一个目录空白地方 点右键「Windows系统，其他系统打开系统终端输命令」》 Git Bash Here ，运行以下命令设置： 12git config --global user.name name #设置Git用户名git config --global user.email &quot;email&quot; #设置Git邮箱 这里只是最基本的Git信息设置，后续提交同步 GitHub 等需要额外授权，详见站内后文：从零开始建个小站 - 2. 拉取仓库到本地 1.2 安装 nodejs跨平台的JavaScript运行环境和包管理工具。一样的，到 Nodejs官网 下载安装包，建议选择长期维护版，默认安装完成即可。 安装完成后，在前文安装完成的 Git Bash 或者系统终端中输入命令 npm version 验证安装结果： 123456$ npm version&#123; npm: &#x27;8.5.5&#x27;, node: &#x27;16.15.0&#x27;, ……&#125; 1.3 安装 hexo前文安装完成 npm 包管理器后，就可以安装 hexo 预览客户端了，打开前文安装完成的 Git Bash 或者系统终端，输入以下命令： 1234# 墙内设置npm淘宝源，加快下载速度npm config set registry https://registry.npm.taobao.org# 系统全局安装hexonpm install -g hexo-cli 安装完成后可使用命令 hexo version 验证： 12345$ hexo versionINFO Validating confighexo: 6.2.0hexo-cli: 4.3.0…… 至此，网站预览所需要的环境就准备完成。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 2. 拉取仓库到本地","slug":"guide-how-to-build-site-4","date":"2022-05-24T12:20:20.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-4.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-4.html","excerpt":"前面的准备工作已完成，剩下就是将仓库文件克隆同步到本地电脑，方便后续维护与预览。","text":"前面的准备工作已完成，剩下就是将仓库文件克隆同步到本地电脑，方便后续维护与预览。 2.1 git clone还是在 Git Bash 中，输入这样的命令： 12cd d:\\Git #先切换到要存放Git文件的目录路径git clone --recurse-submodules 自己的仓库地址 #带子模块一起克隆到本地 以上请将仓库地址换成自己的仓库实际地址，建议从仓库页面上复制，获取方法：打开仓库主页》在文件列表右上方有个 Code ，点击下拉复制，如下图所示： 第一次使用GitHub账号需要授权，默认会有如下图授权提示弹窗，选择从浏览器登录授权，打开浏览器后按提示输入账号密码登录后点击授权，直到出现授权成功的提示就表示授权成功。 2.2 安装依赖包仓库中只包含网站必须的内容源码文件，一些依赖包文件是忽略提交的，所以本地需要重新安装，在仓库根目录路径下运行以下命令： 1npm install 以上命令实际上是下载 package.json 中定义好的依赖包，等依赖包下载完成，整个本地预览环境就全部安装完成了。 2.3 预览测试在仓库根目录路径下运行 hexo s 即可启动预览服务： 12345user@IAY MINGW64 /d/Git/action-hexo (main)$ hexo sINFO Validating configINFO Start processingINFO Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop. 以上输出信息中，/d/Git/action-hexo (main) 就是所谓 运行路径 ，Windows系统表示 d:\\Git\\action-hexo 目录，当前在 main 分支。 浏览器中打开 http://localhost:4000 就可以预览，按 Ctrl+C 组合键停止，一些主题或者网站设置变更需要重启该预览服务才能看到效果。 2.4 用得到的命令 hexo server ：开启本地预览服务，默认端口 4000，可以添加 -p port 指定预览端口，Ctrl + C 关闭，一些网站更改需要重启预览才能看到效果 hexo new &quot;postName&quot; ：新建文章，postName 不建议是中文，也不要添加特殊符号，生成MarkDown 文件在 source/_post 目录下，hexo new 默认新生成的就是 post 类型 hexo new page &quot;pageName&quot; ：新建页面，会在 source 目录下生成 pageName 文件夹及对应 index.md 上面用到的命令对应缩写： 12hexo s == hexo serverhexo n == hexo new 更多命令可自行学习 12hexo help # 查看帮助hexo version #查看Hexo的版本","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 3. 搞个编辑器","slug":"guide-how-to-build-site-5","date":"2022-05-23T12:20:20.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-5.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-5.html","excerpt":"工欲善其事必先利其器，一个好用的编辑器可以事半功倍。","text":"工欲善其事必先利其器，一个好用的编辑器可以事半功倍。 3.1 下载安装编辑器VSCODE 就是个不错的选择，自行到 微软官方网站 去下载安装。 VSCODE 是当前最流行的编辑器，免费开源，专业和业余都能胜任： 全目录管理，一个界面可以管理整个目录下的文件 语法格式显示，也能实时预览 与Git集成，可以界面化操作Git提交同步，比较等 集成命令终端，预览调试方便 VSCODE 可以在当前界面直接调出命令行终端，方便输入命令使用： 启动 VSCODE ，Windows 版可以通过快捷 CTRL+~ 或者菜单 Terminal》New Terminal（新建终端） 其他如 Atom、Sublime Text、Typroa 之类的编辑器也都可以，甚至是专业的代码编辑器请自行研究。 3.2 文件一站式管理VSCODE 可以很方便地对网站进行管理： 克隆完成后，通过快捷方式 Ctrl+K Ctrl+O 或者菜单 File（文件）》Open Folder（打开文件夹） 打开刚克隆完的仓库目录。 至此，我们就可以在 vscode 中便捷地增删改网站源文件了。 3.3 界面化Git操作VSCODE 很好地集成了Git操作，在我们增删改文件后，可以直接在编辑器界面与 Git 仓库提交同步： 提交只是本地操作，要同步到外网，还需要进一步 推送或同步 ，界面上有好几处 同步 、push 等功能按钮，或者直接点 VSCODE 窗口左下角那个 循环图标 即可完成Git数据同步。 如果想一次性完成提交和推送，可以在填写完变更信息后，点击提交右侧的下拉按钮选择提交并推送。 VSCODE 界面上其他按钮功能可以将鼠标移动到对应图形上方悬停一下，然后就会有功能提示了，请自行查阅并使用。基本的演示如动图： 直接填写变更说明提交表示把所有变更提交，如果只想提交指定某个文件，那么如上图所示，点击变更文件后面的 ＋ 单独暂存变更并提交，其他未暂存变更的文件不会被提交。 第一次使用时会提示是否直接提交等提示，请正确选择是，允许等。同时，推送到仓库需要授权，如果是 SSH 仓库地址，请正确配置 SSH 秘钥。 更多操作建议去学习下 Git 基础知识，可求助我们的战略合作伙伴 Google 和百度。 虽然项目仓库主页直接增删改文件都可以，但网页上只能一个一个文件操作，建议还是同步到本地使用，借助编辑器事半功倍，也相当于多了个源码本地备份。 3.4 MarkDown 插件作为 MarkDown 编辑器和文件管理器，建议安装以下插件： Git History GitLens supercharges Markdown All in One Markdown Preview Mermaid Support Markdown Table Markdown Shortcuts 其他有用的插件请自行探索。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 4. 练手内容维护","slug":"guide-how-to-build-site-6","date":"2022-05-22T12:20:20.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-6.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-6.html","excerpt":"","text":"本实操仅针对 建站方案选择 中提及的免费方案：hugo&#x2F;hexo + GitHub + GitHub免费二级域名&#x2F;自备域名 ，另外的付费方案自带网站后台，界面化的一体操作没什么好演示的，如有需要可求助我们的战略合作伙伴Google和百度。 针对 GitHub 仓库版方案，我们需要做的就两步： 强调三点： 所有的增删改都需要同步到上端仓库后网络上才能看到变更！！！ 所有的增删改都需要同步到上端仓库后网络上才能看到变更！！！ 所有的增删改都需要同步到上端仓库后网络上才能看到变更！！！ 增：新增文章、页面、图片等 删：删除文章、页面、图片等 改：对已有的文章、页面、配置、主题等进行修改 使用本站提供的项目仓库自动方案，提交源代码后，会自动触发渲染发布，然后需静待上端网络缓存更新后才看到最新结果。 4.1 新建文章新建文章或页面可以通过新建命令或者复制已有范本后再修改，任意方式都可以，只要最终生成符合规则的MarkDown文档即可。 4.1.1 hexo n 文件名命令方式新建文章或页面，那必定需要在命令终端内执行。 打开命令行终端，输入：hexo n post-name ，如：hexo n just-a-test ，就会在 source/_post 目录下生成一个名称为 just-a-test.md 的文件，这就是新文章的 MarkDown 源码了。 生成的新文章源码名称不建议含有特殊符号、汉字 打开源码文件就能看到自动生成了文章标题等基本的 Front-matter 信息，文章标题等按自己的实际内容编写修改。 4.1.2 复制已有再修改复制已有 就是字面意思，不用打开命令行终端输命令，直接到 source/_post 目录下找个已存在的 MarkDown 文件，如：把网站自带的 hello-world.md 这个文件复制一份改名为 new-post.md ，然后打开该源码文件，把标题，日期等信息按实际内容需求改好，填充新内容就成了。 4.2 格式！格式！前文新建文章或页面说明都提到了需要遵循格式。 一个MarkDown 源码文件，除了 Front-matter 头部信息，其他的就是基本的 MarkDown 语法，MarkDown 语法是页面内容展示，错误与否都只是关系到展示内容样式，而 Front-matter 则直接关系到 hexo 能不能把 MarkDown 源码文件正确渲染成 HTML ，所以遵循正确的 Front-matter 至关重要。 不管是Hugo还是Hexo，他们都只是一种渲染框架，所以MarkDown源代码都需要特定的 Front-matter 标记，也就是两行 --- 中间的那段。 12345678910111213141516---title: &#x27;网页模板 pug 基本语法&#x27;categories: 学编程tags: - 博客建站date: 2021-12-10 15:22:57updated: 2021-12-10 15:22:51toc: truecomments: truekeywords: &#x27;&#x27;description: &#x27;pug原名jade，因版权问题更名为pug，即哈巴狗。如果 `Front-matter` 内容有跨行或特殊符号等，请用英文引号包起来，就如本段示例。&#x27;top:---这里开始就是正文内容了…… 以上示例是 Hexo 程序的 Front-matter 头部信息，其中一些设置项也需要对应的主题支持，如果不是 Hexo 基础 Front-matter ，具体需要添加什么根据主题文档来。 注意：每一个参数的 : 或者 - 后，都需要至少留一个空格，如果不填值就无所谓，或者将参数行删除都行，就是不能不留空格直接写，否则会报错，格式有错误时 VSCODE 也会显色提示，请留意。 Front-matter 基础配置项可见： Hugo-Front-Matter Hexo-Front-matter 在完成了 Front-matter 信息设定后，我们就可以在第二个 --- 行下方填充自己想要的内容。内容书写格式默认使用 MarkDown 语法，你直接写 HTML 代码也行，甚至你可以不顾语法当记事本或者Word写是没问题的，无非就是少了些格式样式。 MarkDown 语法边用边学都没问题，本来就没几个语法，可参考 从零开始建个小站 - 6. 其他知识 中 MarkDown语法 章节 4.3 提交同步数据对于增删改后的内容，我们可以启动本地预览查看效果，没问题了再通过 Git 提交并推送到上端仓库，静待上端渲染及刷新完缓存就能看到最终结果了。 本地预览方法请参见 从零开始建个小站 - 2. 拉取仓库到本地 中 预览测试 章节内容 Git 提交同步数据可用命令行，也可以使用 VSCODE 集成的界面化操作，详情请参考：从零开始建个小站 - 3. 搞个编辑器 4.4 使用快速模板在熟悉了 Hexo 的基础用法后，有些内容是制式固定的，或者想偷个懒一次性都添加好默认内容，那么我们就可以借助自定义快速模板来完成。 在使用 hexo n 命令新建文章时，其实是遵循模板规则。打开 scaffolds 目录，可见有文章，页面等模板文件，打开源码可见如下内容 12345---title: &#123;&#123; title &#125;&#125; //自动替换标题date: &#123;&#123; date &#125;&#125; //创建时间tags: //没内容就留空，但该 tags: 项会创建--- 比如在 post.md 添加新内容如下： 12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags: - Linux - Windowstop:--- 那么，在 hexo n post just-a-test 命令执行后，生成的新文章默认就会带上新加内容，其他用法以此类推。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 5. 个性化设置","slug":"guide-how-to-build-site-7","date":"2022-05-21T12:20:20.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-7.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-7.html","excerpt":"项目仓库克隆下来，网站的各项设置都是默认的，一些标题，作者之类的需要根据自己的实际情况进行修改，个性设置主要是网站根目录的网站基础配置和主题配置。 好在 hugo 和 hexo 配置结构大同小异，而且都支持将配置文件放在网站根目录下，只需要修改配置，今后主题更新只需要同步配置其他也互不影响。","text":"项目仓库克隆下来，网站的各项设置都是默认的，一些标题，作者之类的需要根据自己的实际情况进行修改，个性设置主要是网站根目录的网站基础配置和主题配置。 好在 hugo 和 hexo 配置结构大同小异，而且都支持将配置文件放在网站根目录下，只需要修改配置，今后主题更新只需要同步配置其他也互不影响。 5.1 认识文件123456789101112131415161718192021222324action-hexo #hexo程序工作目录| README.md #说明文档| .gitignore #指定Git提交时忽略的文件规则| package.json #依赖包记录，不要动| _config.yml #网站基础配置文件，定义网站标题，作者等| _config.fluid.yml #fluid这个主题的配置文件，来源于且优先级高于主题目录下的_config.yml|+---node_modules #hexo的依赖环境，不要动，一般都会添加到.gitignore忽略+---scaffolds #文章/页面/草稿模板，不会就不要动|+---source #网站内容根目录，网络路径为：/| favicon.ico #网站图标，网络路径为：/favicon.ico| \\---images #自建文件夹用来放图片资源，网络路径为：/images| | GoodHexo.png #/images下的图片，引用地址为：/images/GoodHexo.png，也可以相对路径：../images/GoodHexo.png| \\---_posts #你所有的文章都存在这个目录底下| | hello-world.md #示例文章源文件，该MarkDown文件会被hexo渲染成HTML页发布| \\---about #自建的一个叫 about 的页面目录| | index.md #about 页面内容，网络路径为：/about/| |+---themes #主题存放目录| \\---landscape #默认主题| \\---butterfly #另一个主题| \\---fluid #另一个主题| | 5.2 网站设置从上文可知，网站基础配置需要在 hexo程序工作目录 中的 _config.yml 进行配置： 123456789# Sitetitle: 易网盟 #网站标题subtitle: &#x27;专注网站建设优化&#x27; #网站副标题description: &#x27;Hexo + GitHub免费仓库托管方案，微软不倒，羊毛到老！&#x27; #网站描述keywords: 静态网站 #网站关键词，不是所有的主题都支持author: 易网盟 #作者timezone: &#x27;Asia/Shanghai&#x27; #时区，一般中国时区# language: en #网站语言，默认 en，请根据主题文档设置language: zh-CN 打开查看内容就能知道大概了，都有对应的注释，请根据自己实际情况修改填写，或者可以参阅 官方配置文档。 5.3 主题设置主题设置每个主题都不一样，所以需要根据实际使用的主题文档去配置，一般在主题目录下都会有个 README.md ，请打开或者找到主题在线文档去阅读，主题让装啥就装啥，让咋改就咋改。 为了以后更新主题时不覆盖我们已经配置好的内容，可以将主题目录下的 _config.yml 复制到 hexo程序工作目录 下，并重命名为：_config.主题名.yml ，如：_config.fluid.yml 。 然后按照主题说明文档在新复制的主题配置中按需进行配置，以后主题有更新，如果涉及到该配置文件变更，请将最新内容同步到 _config.主题名.yml 中即可。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 6. 其他知识","slug":"guide-how-to-build-site-8","date":"2022-05-21T12:00:00.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-8.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-8.html","excerpt":"想到什么写什么，如果没有你关心的问题，请一如既往的求助本站战略合作伙伴 Google和百度。","text":"想到什么写什么，如果没有你关心的问题，请一如既往的求助本站战略合作伙伴 Google和百度。 6.1 git基础网络上优秀教程一大片，不浪费时间精力了，随便找一个：Git 教程 | 菜鸟教程，边用边学就行，俺们也是这样过来的。 6.2 让git通过代理连接有些地区直接无法连接全球男性交友社区，也就无从谈起仓库增删改，就需要借助代理连接，可通过以下命令指定Git走代理网络： 123#这里使用socks5 端口为1080，具体端口看代理软件配置git config --global http.proxy &#x27;socks5://127.0.0.1:1080&#x27; git config --global https.proxy &#x27;socks5://127.0.0.1:1080&#x27; 查看代理： 12git config --global --get http.proxygit config --global --get https.proxy 取消代理： 12git config --global --unset http.proxygit config --global --unset https.proxy 或者也可以通过编辑 Git 配置文件直接配置，打开 用户目录/.gitconfig ，Windows系统如 C:\\Users\\ywm\\.gitconfig ，增加如下内容： 1234567891011# 这是个使用 clash 代理的默认端口示例，具体请看代理软件配置[core] gitproxy = socks5://127.0.0.1:7890[http] postBuffer = 524288000 postBuffer = 524288000 proxy = socks5://127.0.0.1:7890[https] postBuffer = 524288000 postBuffer = 524288000 proxy = socks5://127.0.0.1:7890 打开这个文件可见之前配置的用户名称和email信息，直接通过编辑配置文件和通过命令设置理是一样的效果。 6.3 hexo高级语法如果只是普通的写写博客，做个小展示网站什么的，高级语法也不需要。但用上些高级语法，在处理大量同质内容时就事半功倍了，直接见官方文档吧： hexo：Data Files 6.4 MarkDown语法📌 Titles Heading 1: # A first-level title Heading 2: # A second-level title Heading 3: ## A third-level title 💻 Code blockscreates a new code block.，源码如下： 1`creates a new code block.` ```py creates a new code block with Python syntax highlighting. 📋 ListsWe automatically detect ordered and un-ordered lists as you type. Begin a line with - or * to start a bullet list.Being a line with 1. to start a numbered list. Use Tab to go one level deeper, and Shift+Tab to go up. Begin a line with - [ ] to start a task list. 🎤 QuotesBegin a line with &gt; to create a block quote. 🐮 emoji markup😊 😃 😴 Complete list of github markdown emoji markup References Markdown 入门参考 Markdown 基本语法 Markdown 菜鸟教程","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 教程导航","slug":"guide-how-to-build-site-0","date":"2022-05-20T12:20:20.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-0.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-0.html","excerpt":"","text":"引言互联网时代，大家都想在浩瀚的网络世界留下点印记。 虽然有微信朋友圈，QQ空间，微博等可以记录点点滴滴，但他们要么是没法扩大圈子，要么是加以各种限制，到头来这些数据产权还都属于马家，更不用谈某天实现增值获取收益，寄人篱下终究不如自己做主：建个自己掌控的网站！ 本简版教程旨在试图引导小白快速上手 Hexo 建站框架，免费或者低成本建个自己的小站，从零开始的详细教程可参考：从零开始建个小站。 教程目录 从零开始建个小站 - 前置知识 从零开始建个小站 - 建站方案选择 从零开始建个小站 - 1. 搭个本地预览环境 从零开始建个小站 - 2. 拉取仓库到本地 从零开始建个小站 - 3. 搞个编辑器 从零开始建个小站 - 4. 练手内容维护 从零开始建个小站 - 5. 个性化设置 从零开始建个小站 - 6. 其他知识 从零开始建个小站 - 常见问题","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 前置知识","slug":"guide-how-to-build-site-1","date":"2022-05-20T12:20:20.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-1.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-1.html","excerpt":"","text":"建站须知 虽然说是零基础建站，但一些互联网及计算机基本知识技能还是不能少的，如怎么安装软件，怎么敲命令，怎么解析域名…… 建站就需要文件托管服务，如上传到GitHub仓库，自己买的云服务器，虚拟主机等 网站对外需要有IP或者域名（一般都不会直接IP对外服务），所以要么用GitHub提供免费的二级域名，要么自行购买域名并解析到文件托管服务器 建站时会涉及各种配置设置，而且各程序，各主题都不尽相同，都需要根据实际对象依照文档进行配置，所以需要具备阅读文档的能力 基本概念 名词 解释说明 git 大名鼎鼎的分布式版本管理工具，每个版本改了什么一目了然 GitHub 版本管理托管商，全球最大的男性交友社区 action GitHub提供的在线执行环境，类似于一个虚拟机 pages GitHub提供的网页托管访问服务，每用户一个免费二级域名 npm 依赖包管理工具，各种套娃 MarkDown 轻量标记语言，写文档必备技能 服务器&#x2F;云主机 存放文件24小时在线提供网络访问服务的计算机 域名 互联网上便于人类识别记忆的访问地址 ICP备案 大陆境内服务器需要，有问题方便FBI请喝茶或上门送温暖 主题&#x2F;模板 套用后实展现相应的界面外观及功能 网站程序选型网站程序选型主要依据环境依赖程度和维护难度，以及网络上免费资源可持续性考虑，对大多数普通用户，建议： 首选 hugo/hexo：HTML静态页渲染框架，速度快，可免费托管到GitHub仓库，MarkDown文档维护，主题多可满足大部分需求。大部分用户建议选择 hugo 程序，无需安装麻烦的依赖，而且有将近400套各式主题可选。 其次 WordPress：需自备服务器，没有免费资源可用，但有后台界面，网络上用户多，插件多，文档教程多 市面上网站程序比较多，罗列了几个比较主流的框架，更多可以自行通过搜索引擎查找对应文档。 程序框架 环境依赖 维护难度 推荐度 常见用途 hugo &#x2F; ★★ ★★★★☆ 个人网站，企业官网，在线文档，求职简历 hexo nodejs ★★ ★★★★★ 个人网站，企业官网，在线文档，求职简历 gitbook nodejs ★★★★ ★★ 在线文档 vuepress nodejs ★★★★ ★★★ 个人网站，在线文档 docsy nodejs ★★★★ ★★★ 在线文档 WordPress MySQL，PHP ★★★ ★★★★ 个人网站，企业官网 Typecho MySQL，PHP ★★★☆ ★★★☆ 个人网站，企业官网 Zblog MySQL&#x2F;SQLite，PHP ★★★ ★★★ 个人网站，企业官网 PS：维护难度和推荐度都是主观意见，推荐度高主要是基于部署简单，可选主题多，互联网免费资源多，对最终实现的功能需求未做考虑，大部分情况根据自己实际需求考量。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"从零开始建个小站 - 建站方案选择","slug":"guide-how-to-build-site-2","date":"2022-05-20T12:20:20.000Z","updated":"2022-12-01T11:09:40.269Z","comments":true,"path":"guide-how-to-build-site-2.html","link":"","permalink":"https://qianwen99.github.io/guide-how-to-build-site-2.html","excerpt":"既然这是篇小白零基础建站教程，那么就不会涉及带门槛的方案，只是简单罗列了适合新手的案例，其他同等方案或者更复杂方案等熟悉了可以再自行研究。","text":"既然这是篇小白零基础建站教程，那么就不会涉及带门槛的方案，只是简单罗列了适合新手的案例，其他同等方案或者更复杂方案等熟悉了可以再自行研究。 方案对比免费：hugo&#x2F;hexo + GitHub + GitHub免费二级域名&#x2F;自备域名 flowchart LR; 本地维护MarkDown内容 -- hugo/hexo渲染 -->本地效果预览 GitHub私有仓库 -- 可绑定自备域名 --> 公开pages服务 本地维护MarkDown内容 GitHub私有仓库 -- 触发action自动渲染 --> 公开pages服务 优点：有免费资源，静态页速度快，网站源文件通过 git 版本管理安全可靠 缺点：需要点 MarkDown 语法知识，缺小白界面化管理后台 付费：WordPress&#x2F;Typecho&#x2F;Zblog + 自备服务器 + 自备域名 flowchart LR; 自备域名 -- DNS解析 --> 自备服务器 --> 网站对外服务 网站界面后台维护内容 --> 自备服务器 -- 大陆区服务器 --> ICP备案 --> 网站对外服务 优点：功能强大几乎能满足所有需求，装好后带后台，纯界面操作所见即所得 缺点：需要自己购买服务器和域名，对服务器要求高，响应速度相对慢点 准备条件免费方案：flowchart TB; 免费方案 --必须--> 注册GitHub账号 & 安装Git客户端 注册GitHub账号 --> 创建仓库 & 配置访问令牌 安装Git客户端 --编辑MarkDown源码--> 发布到GitHub 免费方案 --可选--> 安装本地环境 & 装个趁手的编辑器 & 购买域名 装个趁手的编辑器 GitHub账号：要使用免费的资源，得先注册个账号。虽然国内 Gitee 也有，但绑定自己的域名要收费，而且内容要审核，所以还是直接用前首富家的 GitHub 吧。当然，你有自己服务器和域名也可以用来替代。 Git客户端：用来同步管理源代码，改了什么一目了然 MarkDown 编辑器：纯手工敲代码是不可能的，借助编辑器事半功倍，而且还能和 Git 结合，大大降低难度 域名「可选」：花点小钱占个自己的域名赏心悦目，也好打响自己的品牌，万一哪天走了张伟波的运呢？ 付费方案：flowchart LR; 付费方案 --必须--> 购买域名 & 购买服务器 购买服务器 --大陆区服务器--> ICP备案 购买服务器 --> 安装环境并部署网站 & 后台发布内容 域名：虽然也有免费的，但还是建议花钱买，每年几十元 服务器&#x2F;云主机&#x2F;虚拟主机：需要带数据库，支持PHP及安装扩展 ICP备案：如果用大陆区服务器，必须先工信部ICP备案后才可用，大约需耗时6周","categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"Markdown高级语法","slug":"markdown-advance-syntax","date":"2022-05-08T09:04:21.000Z","updated":"2022-05-08T09:04:21.000Z","comments":true,"path":"markdown-advance-syntax.html","link":"","permalink":"https://qianwen99.github.io/markdown-advance-syntax.html","excerpt":"只有少数编辑器支持，或者需要安装相应的扩展渲染，使用前请先预览确认。","text":"只有少数编辑器支持，或者需要安装相应的扩展渲染，使用前请先预览确认。 定义列表1234Term 1Term 2: Definition A: Definition B 会被编译成 123456&lt;dl&gt;&lt;dd&gt;Term 1&lt;/dd&gt;&lt;dd&gt;Term 2&lt;/dd&gt;&lt;dt&gt;Definition A&lt;dt&gt;&lt;dt&gt;Definition A&lt;dt&gt;&lt;/dl&gt; 目录通过[TOC]标记来插入目录。 在编辑器不支持[TOC]标记的情况下可以使用添加id的方法构建目录。 123456## Directory* [1.Content one](#chapter1)* [2.Content two](#chapter2)## &lt;span id=&quot;chapter1&quot;&gt;1.Content one&lt;/span&gt;## &lt;span id=&quot;chapter2&quot;&gt;2.Content two&lt;/span&gt; TeX公式内联的TeX公式使用一个美元符号标记。 1$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ 会被编译成内联（行内）公式：$\\Gamma(n) &#x3D; (n-1)!\\quad\\forall n\\in\\mathbb N$ TeX公式块用独占一行的两个美元符号来标记。 1$$\\left \\lbrace \\sum_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125; \\right \\rbrace$$ 会被编译成 $$\\left \\lbrace \\sum_{i&#x3D;0}^n i^3 &#x3D; \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$ 如果你的编辑器不支持这个功能，可以手动解决。首先引入mathjax脚本： 1&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt; 之后，在需要插入公式的地方使用 &lt;script&gt; 标签包裹公式： 12345&lt;script type=&quot;math/tex&quot;&gt;\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.&lt;/script&gt; 以上公式展示效果，在实际显示过程中，根据网络加载速度不同会有不同的解析展示速度，TeX的语法参考请见这里。 UML图语法为在代码块开始行后面加入语法声明，如 ```mermaid ，然后可以像这样来画uml时序图： sequenceDiagram Alice->>Bob: Hello Bob,how are you? Note right of Bob: Bob thinks Bob-->>Alice: I am fine thanks! and U? Note left of Alice: SB 其MarkDown代码如下： 1234567\\`\\`\\`mermaidsequenceDiagram Alice-&gt;&gt;Bob: Hello Bob,how are you? Note right of Bob: Bob thinks Bob--&gt;&gt;Alice: I am fine thanks! and U? Note left of Alice: SB\\`\\`\\` #代码块标识会被解析，实际上写代码块时不用添加转义符“\\” 时序图的语法请见 这里 或 这里。 uml流程图： graph LR; A-->B & C-->D; 其实现代码如下： 1234\\`\\`\\`mermaidgraph LR; A--&gt;B &amp; C--&gt;D;\\`\\`\\` 流程图的语法请见 这里， 更复杂点的flowchart可以看 这里 。 参考文档 MarkDown文档中如何画出流程图 https://github.com/wizardforcel/markdown-simple-world http://stevenshi.me/2017/06/26/hexo-insert-formula/ https://blog.csdn.net/u013282174/article/details/80666123 https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html https://mermaidjs.github.io/","categories":[{"name":"学编程","slug":"学编程","permalink":"https://qianwen99.github.io/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://qianwen99.github.io/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]}],"categories":[{"name":"做网站","slug":"做网站","permalink":"https://qianwen99.github.io/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"},{"name":"学编程","slug":"学编程","permalink":"https://qianwen99.github.io/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Example","slug":"Example","permalink":"https://qianwen99.github.io/tags/Example/"},{"name":"教程","slug":"教程","permalink":"https://qianwen99.github.io/tags/%E6%95%99%E7%A8%8B/"},{"name":"混技能","slug":"混技能","permalink":"https://qianwen99.github.io/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]}